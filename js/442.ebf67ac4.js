(self["webpackChunksnippets_admin"]=self["webpackChunksnippets_admin"]||[]).push([[442],{57442:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return y}});var r=function(){var e=this,n=e._self._c;return n("div",{staticClass:"page"},[n("h4",[e._v("Draggable(Relative to the viewport)")]),n("div",{staticClass:"draggable-area"},[n("div",{directives:[{name:"draggable",rawName:"v-draggable.sticky",modifiers:{sticky:!0}}],staticClass:"box"})]),n("div",{staticClass:"source"},[n("pre",{staticClass:"mb-0"},[e._v('// template\n<div class="box" v-draggable.sticky></div>\n===============================================================\n// js\n'+e._s(e.content)+"\n      ")])]),n("h4",{staticClass:"mt-5"},[e._v("Parent Boundary")]),n("div",{ref:"boundary",staticClass:"border draggable-area"},[n("div",{directives:[{name:"draggable",rawName:"v-draggable.sticky",value:e.handlerDrag,expression:"handlerDrag",modifiers:{sticky:!0}}],staticClass:"box"})]),e._m(0)])},i=[function(){var e=this,n=e._self._c;return n("div",{staticClass:"source"},[n("pre",{staticClass:"mb-0"},[e._v(" // template\n<div class=\"box\" v-draggable.sticky=\"handlerDrag\"></div>\n===============================================================\n// script\nmethods: {\n  handlerDrag (config) {\n    const parent = this.$refs.boundary\n    const { x, y, width, height } = parent.getBoundingClientRect()\n    const target = config.target\n\n    const left = config.x - x\n    const top = config.y - y\n    parent.style.position = 'relative'\n    target.style.cssText = `\n      position: absolute;\n      left: ${left}px;\n      top: ${top}px;\n      width: ${config.rect.width}px;\n      height: ${config.rect.height}px;\n    `\n    const m = width - config.rect.width\n    const n = height - config.rect.height\n\n    target.style.left = (Math.min(Math.max(left, 0), m)) + 'px'\n    target.style.top = (Math.min(Math.max(top, 0), n)) + 'px'\n  },\n},\n      ")])])}];let s=0;const o="@@draggableContext",l=/mobile/i.test(window.navigator.userAgent),a={MOUSE_DOWN:l?"touchstart":"mousedown",MOUSE_MOVE:l?"touchmove":"mousemove",MOUSE_UP:l?"touchend":"mouseup"};function c(e){l&&e.preventDefault();const n=this,t=n.getBoundingClientRect();n.style.position="fixed",Object.assign(n[o],{type:a.MOUSE_DOWN,rect:t,x:t.x||t.left,y:t.y||t.top,dragstartX:l?e.touches[0].clientX:e.clientX,dragstartY:l?e.touches[0].clientY:e.clientY,dragendX:void 0,dragendY:void 0,startX:l?e.touches[0].clientX:e.clientX,startY:l?e.touches[0].clientY:e.clientY,dragging:!0,isMove:!1}),u(n),window.addEventListener(a.MOUSE_MOVE,n[o]._handleMousemove,!1),window.addEventListener(a.MOUSE_UP,n[o]._handleMouseup,!1)}function d(e){return function(n){if(l||n.preventDefault(),n.target===document.documentElement)return;const t={x:l?n.touches[0].clientX:n.clientX,y:l?n.touches[0].clientY:n.clientY},r={x:t.x-e[o].startX,y:t.y-e[o].startY};if(e[o].binding.modifiers.sticky){const n=document.documentElement.clientWidth,t=document.documentElement.clientHeight,{x:i,y:s,rect:{width:l,height:a}}=e[o];r.x<0&&i+r.x<=0?e[o].x=0:r.x>0&&i+l-n>=0?e[o].x=n-l:e[o].x+=r.x,r.y<0&&s+r.y<=0?e[o].y=0:r.y>0&&s+a-t>=0?e[o].y=t-a:e[o].y+=r.y}else e[o].x+=r.x,e[o].y+=r.y;Object.assign(e[o],{type:a.MOUSE_MOVE,startX:t.x,startY:t.y,diffX:r.x,diffY:r.y,isMove:!0}),u(e)}}function g(e){return function(n){l||n.preventDefault();const t=e[o].type;Object.assign(e[o],{type:a.MOUSE_UP,dragendX:l?e[o].startX:n.clientX,dragendY:l?e[o].startY:n.clientY,dragging:!1,isMove:t===a.MOUSE_MOVE}),u(e),window.removeEventListener(a.MOUSE_MOVE,e[o]._handleMousemove,!1),window.removeEventListener(a.MOUSE_UP,e[o]._handleMouseup,!1)}}function u(e){const n=e[o]?.binding?.value;if("function"===typeof n)n({...e[o],target:e});else{const{x:n,y:t,rect:r,dragging:i}=e[o];if(!i)return;e.style.cssText=`\n      position: fixed;\n      left: ${n}px;\n      top: ${t}px;\n      width: ${r.width}px;\n      height: ${r.height}px;\n    `}}var h={bind(e,n,t){const r=s++;e[o]={id:r,binding:n,vnode:t,_handleMousemove:d(e,n,t),_handleMouseup:g(e,n,t)},e.addEventListener(a.MOUSE_DOWN,c,!1)},unbind(e){window.removeEventListener(a.MOUSE_MOVE,e[o]._handleMousemove,!1),window.removeEventListener(a.MOUSE_UP,e[o]._handleMouseup,!1),e.removeEventListener(a.MOUSE_DOWN,c,!1),delete e[o]}},f=t(87900),v=t.n(f),x={name:"draggable-index",directives:{draggable:h},data(){return{content:v()}},methods:{handlerDrag(e){const n=this.$refs.boundary,{x:t,y:r,width:i,height:s}=n.getBoundingClientRect(),o=e.target,l=e.x-t,a=e.y-r;n.style.position="relative",o.style.cssText=`\n        position: absolute;\n        left: ${l}px;\n        top: ${a}px;\n        width: ${e.rect.width}px;\n        height: ${e.rect.height}px;\n      `;const c=i-e.rect.width,d=s-e.rect.height;o.style.left=Math.min(Math.max(l,0),c)+"px",o.style.top=Math.min(Math.max(a,0),d)+"px"}}},M=x,p=t(1001),E=(0,p.Z)(M,r,i,!1,null,"16f892f2",null),y=E.exports},87900:function(e){e.exports="let seed = 0\r\nconst ctx = '@@draggableContext'\r\nconst isMobile = /mobile/i.test(window.navigator.userAgent)\r\nconst EVENT = {\r\n  MOUSE_DOWN: isMobile ? 'touchstart' : 'mousedown',\r\n  MOUSE_MOVE: isMobile ? 'touchmove' : 'mousemove',\r\n  MOUSE_UP: isMobile ? 'touchend' : 'mouseup'\r\n}\r\n\r\nfunction handleMousedown (event) {\r\n  if (isMobile) {\r\n    event.preventDefault()\r\n  }\r\n  const el = this\r\n  const rect = el.getBoundingClientRect()\r\n\r\n  el.style.position = 'fixed'\r\n\r\n  Object.assign(el[ctx], {\r\n    type: EVENT.MOUSE_DOWN,\r\n    rect: rect,\r\n    x: rect.x || rect.left,\r\n    y: rect.y || rect.top,\r\n    dragstartX: isMobile ? event.touches[0].clientX : event.clientX, // 鼠标按下时坐标\r\n    dragstartY: isMobile ? event.touches[0].clientY : event.clientY,\r\n    dragendX: undefined, // 鼠标松开时坐标\r\n    dragendY: undefined,\r\n    startX: isMobile ? event.touches[0].clientX : event.clientX, // 起点坐标\r\n    startY: isMobile ? event.touches[0].clientY : event.clientY,\r\n    dragging: true,\r\n    isMove: false,\r\n  })\r\n\r\n  callback(el)\r\n\r\n  window.addEventListener(EVENT.MOUSE_MOVE, el[ctx]._handleMousemove, false)\r\n  window.addEventListener(EVENT.MOUSE_UP, el[ctx]._handleMouseup, false)\r\n}\r\n\r\nfunction handleMousemove (el) {\r\n  return function (event) {\r\n    if (!isMobile) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    if (event.target === document.documentElement) return\r\n\r\n    const current = {\r\n      x: isMobile ? event.touches[0].clientX : event.clientX,\r\n      y: isMobile ? event.touches[0].clientY : event.clientY,\r\n    }\r\n\r\n    const diff = {\r\n      x: current.x - el[ctx].startX,\r\n      y: current.y - el[ctx].startY,\r\n    }\r\n\r\n    if (el[ctx].binding.modifiers.sticky) {\r\n      // 不会拖出屏幕边缘\r\n      const clientWidth = document.documentElement.clientWidth\r\n      const clientHeight = document.documentElement.clientHeight\r\n\r\n      const {\r\n        x,\r\n        y,\r\n        rect: {\r\n          width,\r\n          height\r\n        },\r\n      } = el[ctx]\r\n\r\n      if (diff.x < 0 && x + diff.x <= 0) {\r\n        el[ctx].x = 0\r\n      } else if (diff.x > 0 && x + width - clientWidth >= 0) {\r\n        el[ctx].x = clientWidth - width\r\n      } else {\r\n        el[ctx].x += diff.x\r\n      }\r\n\r\n      if (diff.y < 0 && y + diff.y <= 0) {\r\n        el[ctx].y = 0\r\n      } else if (diff.y > 0 && y + height - clientHeight >= 0) {\r\n        el[ctx].y = clientHeight - height\r\n      } else {\r\n        el[ctx].y += diff.y\r\n      }\r\n    } else {\r\n      el[ctx].x += diff.x\r\n      el[ctx].y += diff.y\r\n    }\r\n\r\n    Object.assign(el[ctx], {\r\n      type: EVENT.MOUSE_MOVE,\r\n      startX: current.x,\r\n      startY: current.y,\r\n      diffX: diff.x,\r\n      diffY: diff.y,\r\n      isMove: true,\r\n    })\r\n\r\n    callback(el)\r\n  }\r\n}\r\n\r\nfunction handleMouseup (el) {\r\n  return function (event) {\r\n    if (!isMobile) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    const lastType = el[ctx].type\r\n\r\n    Object.assign(el[ctx], {\r\n      type: EVENT.MOUSE_UP,\r\n      dragendX: isMobile ? el[ctx].startX : event.clientX, // 鼠标按下时坐标\r\n      dragendY: isMobile ? el[ctx].startY : event.clientY,\r\n      dragging: false,\r\n      isMove: lastType === EVENT.MOUSE_MOVE,\r\n    })\r\n\r\n    callback(el)\r\n\r\n    window.removeEventListener(EVENT.MOUSE_MOVE, el[ctx]._handleMousemove, false)\r\n    window.removeEventListener(EVENT.MOUSE_UP, el[ctx]._handleMouseup, false)\r\n  }\r\n}\r\n\r\nfunction callback (el) {\r\n  const bindingFn = el[ctx]?.binding?.value\r\n  if (typeof bindingFn === 'function') {\r\n    bindingFn({\r\n      ...el[ctx],\r\n      target: el\r\n    })\r\n  } else {\r\n    const {\r\n      x,\r\n      y,\r\n      rect,\r\n      dragging\r\n    } = el[ctx]\r\n    if (!dragging) return\r\n    el.style.cssText = `\r\n      position: fixed;\r\n      left: ${x}px;\r\n      top: ${y}px;\r\n      width: ${rect.width}px;\r\n      height: ${rect.height}px;\r\n    `\r\n  }\r\n}\r\n\r\n/**\r\n * v-draggable\r\n * @desc\r\n * @example\r\n * ```vue\r\n * <div v-draggable>\r\n *\r\n * <div v-draggable.sticky>\r\n * <div v-draggable=\"handleDraggable\">\r\n * ```\r\n */\r\nexport default {\r\n  bind (el, binding, vnode) {\r\n    const id = seed++\r\n    el[ctx] = {\r\n      id,\r\n      binding,\r\n      vnode,\r\n      _handleMousemove: handleMousemove(el, binding, vnode),\r\n      _handleMouseup: handleMouseup(el, binding, vnode),\r\n    }\r\n\r\n    el.addEventListener(EVENT.MOUSE_DOWN, handleMousedown, false)\r\n  },\r\n\r\n  unbind (el) {\r\n    window.removeEventListener(EVENT.MOUSE_MOVE, el[ctx]._handleMousemove, false)\r\n    window.removeEventListener(EVENT.MOUSE_UP, el[ctx]._handleMouseup, false)\r\n    el.removeEventListener(EVENT.MOUSE_DOWN, handleMousedown, false)\r\n    delete el[ctx]\r\n  },\r\n}\r\n"}}]);
//# sourceMappingURL=442.ebf67ac4.js.map