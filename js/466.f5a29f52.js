"use strict";(self["webpackChunksnippets_admin"]=self["webpackChunksnippets_admin"]||[]).push([[466],{64466:function(a,e,n){n.r(e),n.d(e,{default:function(){return u}});var s=function(){var a=this;a._self._c;return a._m(0)},r=[function(){var a=this,e=a._self._c;return e("div",{staticClass:"page"},[e("h2",[a._v("DayJS")]),e("div",{staticClass:"blockquote"},[a._v(" Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API. "),e("a",{attrs:{href:"https://day.js.org/",target:"_blank"}},[a._v("https://day.js.org/")])]),e("h4",[a._v("Common API")]),e("div",{staticClass:"source"},[e("pre",{staticClass:"mb-0"},[a._v("import dayjs from 'dayjs'\n\n// parse: undefined, string, string + format, date, object, array, dayjs\ndayjs()\ndayjs('2023-06-17 10:05')\ndayjs(\"12-25-1995\", \"MM-DD-YYYY\") // This requires CustomParseFormat plugin.\ndayjs(new Date())\ndayjs({year: 2010, month: 3, day: 5, hour: 15, minute: 10, second: 3, millisecond: 123}) // This requires ObjectSupport plugin.\ndayjs([2010, 6, 10]) // This requires ArraySupport plugin.\ndayjs(dayjs())\n\n// validate\ndayjs('some invalid string').isValid() // -> false\n\n// clone\nvar a = dayjs()\nvar b = a.clone()\nvar b = dayjs(a)\n\n// i18n\nrequire('dayjs/locale/zh-cn')\ndayjs.locale('zh-cn')\n\n// get unit: date,day,month,year,month,hour,minute,second,millisecond\ndayjs().get(unit) === dayjs()[unit]() // dayjs().get('month')\n\n// set\ndayjs().set(unit, value) === dayjs()[unit](value) // dayjs().set('month', 2)\n\n// manipulate\ndayjs('2019-01-25').add(1, 'day').subtract(1, 'year').year(2009).toString()\n\n// display YY|YYYY M|MM|MMM D|DD H|HH m|mm s|ss\ndayjs('2019-01-25').format('[YYYYescape] YYYY-MM-DD') // -> YYYYescape 2019-01-25 Notes: To escape characters, wrap them in square brackets\n\n// plugin\nvar dayOfYear = require('dayjs/plugin/dayOfYear')\ndayjs.extend(dayOfYear)\ndayjs('2010-01-01').dayOfYear() // -> 1\ndayjs('2010-01-01').dayOfYear(365) // -> 2010-12-31\n\nvar quarterOfYear = require('dayjs/plugin/quarterOfYear')\ndayjs.extend(quarterOfYear)\ndayjs('2010-04-01').quarter() // 2\ndayjs('2010-04-01').quarter(2)\n\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime)\ndayjs().from(dayjs('1990-01-01'))\ndayjs('2010-04-01').fromNow()\ndayjs().to(dayjs('1990-01-01'))\ndayjs().toNow()\n\nvar isLeapYear = require('dayjs/plugin/isLeapYear')\ndayjs.extend(isLeapYear)\ndayjs().isLeapYear()\n      ")])])])}],t={name:"dayjs-index"},d=t,i=n(1001),y=(0,i.Z)(d,s,r,!1,null,"66036855",null),u=y.exports}}]);
//# sourceMappingURL=466.f5a29f52.js.map