{"version":3,"file":"js/466.82eb9764.js","mappings":"yKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAQD,EAAIE,MAAMC,GAAG,OAAOH,EAAII,GAAG,EAC1E,EACIC,EAAkB,CAAC,WAAY,IAAIL,EAAIC,KAAKE,EAAGH,EAAIE,MAAMC,GAAG,OAAOA,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,KAAK,CAACH,EAAIO,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,cAAc,CAACN,EAAIO,GAAG,8KAA8KJ,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,sBAAsB,OAAS,WAAW,CAACR,EAAIO,GAAG,2BAA2BJ,EAAG,KAAK,CAACH,EAAIO,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,UAAU,CAACH,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACN,EAAIO,GAAG,uxDACriB,GCqEA,GACAE,KAAA,eCzE8P,I,UCO1PC,GAAY,OACd,EACAX,EACAM,GACA,EACA,KACA,WACA,MAIF,EAAeK,EAAiB,O","sources":["webpack://snippets-admin/./src/views/dayjs/index.vue","webpack://snippets-admin/src/views/dayjs/index.vue","webpack://snippets-admin/./src/views/dayjs/index.vue?5e20","webpack://snippets-admin/./src/views/dayjs/index.vue?4210"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"page\"},[_c('h2',[_vm._v(\"DayJS\")]),_c('div',{staticClass:\"blockquote\"},[_vm._v(\" Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API. \"),_c('a',{attrs:{\"href\":\"https://day.js.org/\",\"target\":\"_blank\"}},[_vm._v(\"https://day.js.org/\")])]),_c('h4',[_vm._v(\"Common API\")]),_c('div',{staticClass:\"source\"},[_c('pre',{staticClass:\"mb-0\"},[_vm._v(\"import dayjs from 'dayjs'\\n\\n// parse: undefined, string, string + format, date, object, array, dayjs\\ndayjs()\\ndayjs('2023-06-17 10:05')\\ndayjs(\\\"12-25-1995\\\", \\\"MM-DD-YYYY\\\") // This requires CustomParseFormat plugin.\\ndayjs(new Date())\\ndayjs({year: 2010, month: 3, day: 5, hour: 15, minute: 10, second: 3, millisecond: 123}) // This requires ObjectSupport plugin.\\ndayjs([2010, 6, 10]) // This requires ArraySupport plugin.\\ndayjs(dayjs())\\n\\n// validate\\ndayjs('some invalid string').isValid() // -> false\\n\\n// clone\\nvar a = dayjs()\\nvar b = a.clone()\\nvar b = dayjs(a)\\n\\n// i18n\\nrequire('dayjs/locale/zh-cn')\\ndayjs.locale('zh-cn')\\n\\n// get unit: date,day,month,year,month,hour,minute,second,millisecond\\ndayjs().get(unit) === dayjs()[unit]() // dayjs().get('month')\\n\\n// set\\ndayjs().set(unit, value) === dayjs()[unit](value) // dayjs().set('month', 2)\\n\\n// manipulate\\ndayjs('2019-01-25').add(1, 'day').subtract(1, 'year').year(2009).toString()\\n\\n// display YY|YYYY M|MM|MMM D|DD H|HH m|mm s|ss\\ndayjs('2019-01-25').format('[YYYYescape] YYYY-MM-DD') // -> YYYYescape 2019-01-25 Notes: To escape characters, wrap them in square brackets\\n\\n// plugin\\nvar dayOfYear = require('dayjs/plugin/dayOfYear')\\ndayjs.extend(dayOfYear)\\ndayjs('2010-01-01').dayOfYear() // -> 1\\ndayjs('2010-01-01').dayOfYear(365) // -> 2010-12-31\\n\\nvar quarterOfYear = require('dayjs/plugin/quarterOfYear')\\ndayjs.extend(quarterOfYear)\\ndayjs('2010-04-01').quarter() // 2\\ndayjs('2010-04-01').quarter(2)\\n\\nvar relativeTime = require('dayjs/plugin/relativeTime')\\ndayjs.extend(relativeTime)\\ndayjs().from(dayjs('1990-01-01'))\\ndayjs('2010-04-01').fromNow()\\ndayjs().to(dayjs('1990-01-01'))\\ndayjs().toNow()\\n\\nvar isLeapYear = require('dayjs/plugin/isLeapYear')\\ndayjs.extend(isLeapYear)\\ndayjs().isLeapYear()\\n      \")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"page\">\r\n    <h2>DayJS</h2>\r\n    <div class=\"blockquote\">\r\n      Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with a largely Moment.js-compatible API.\r\n      <a href=\"https://day.js.org/\" target=\"_blank\">https://day.js.org/</a>\r\n    </div>\r\n    <h4>Common API</h4>\r\n    <div class=\"source\">\r\n      <pre class=\"mb-0\">\r\nimport dayjs from 'dayjs'\r\n\r\n// parse: undefined, string, string + format, date, object, array, dayjs\r\ndayjs()\r\ndayjs('2023-06-17 10:05')\r\ndayjs(\"12-25-1995\", \"MM-DD-YYYY\") // This requires CustomParseFormat plugin.\r\ndayjs(new Date())\r\ndayjs({year: 2010, month: 3, day: 5, hour: 15, minute: 10, second: 3, millisecond: 123}) // This requires ObjectSupport plugin.\r\ndayjs([2010, 6, 10]) // This requires ArraySupport plugin.\r\ndayjs(dayjs())\r\n\r\n// validate\r\ndayjs('some invalid string').isValid() // -> false\r\n\r\n// clone\r\nvar a = dayjs()\r\nvar b = a.clone()\r\nvar b = dayjs(a)\r\n\r\n// i18n\r\nrequire('dayjs/locale/zh-cn')\r\ndayjs.locale('zh-cn')\r\n\r\n// get unit: date,day,month,year,month,hour,minute,second,millisecond\r\ndayjs().get(unit) === dayjs()[unit]() // dayjs().get('month')\r\n\r\n// set\r\ndayjs().set(unit, value) === dayjs()[unit](value) // dayjs().set('month', 2)\r\n\r\n// manipulate\r\ndayjs('2019-01-25').add(1, 'day').subtract(1, 'year').year(2009).toString()\r\n\r\n// display YY|YYYY M|MM|MMM D|DD H|HH m|mm s|ss\r\ndayjs('2019-01-25').format('[YYYYescape] YYYY-MM-DD') // -> YYYYescape 2019-01-25 Notes: To escape characters, wrap them in square brackets\r\n\r\n// plugin\r\nvar dayOfYear = require('dayjs/plugin/dayOfYear')\r\ndayjs.extend(dayOfYear)\r\ndayjs('2010-01-01').dayOfYear() // -> 1\r\ndayjs('2010-01-01').dayOfYear(365) // -> 2010-12-31\r\n\r\nvar quarterOfYear = require('dayjs/plugin/quarterOfYear')\r\ndayjs.extend(quarterOfYear)\r\ndayjs('2010-04-01').quarter() // 2\r\ndayjs('2010-04-01').quarter(2)\r\n\r\nvar relativeTime = require('dayjs/plugin/relativeTime')\r\ndayjs.extend(relativeTime)\r\ndayjs().from(dayjs('1990-01-01'))\r\ndayjs('2010-04-01').fromNow()\r\ndayjs().to(dayjs('1990-01-01'))\r\ndayjs().toNow()\r\n\r\nvar isLeapYear = require('dayjs/plugin/isLeapYear')\r\ndayjs.extend(isLeapYear)\r\ndayjs().isLeapYear()\r\n      </pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'dayjs-index'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=66036855&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"66036855\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","name","component"],"sourceRoot":""}